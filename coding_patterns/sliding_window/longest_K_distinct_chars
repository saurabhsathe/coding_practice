'''
Problem Statement #
Given a string, find the length of the longest substring in it with no more than K distinct characters.
Example 1:
Input: String="araaci", K=2
Output: 4
Explanation: The longest substring with no more than '2' distinct characters is "araa".
Example 2:
Input: String="araaci", K=1
Output: 2
Explanation: The longest substring with no more than '1' distinct characters is "aa".
Example 3:
Input: String="cbbebi", K=3
Output: 5
Explanation: The longest substrings with no more than '3' distinct characters are "cbbeb" & "bbebi".
'''

def solution(s,k):
    substr=s
    longest=float("-inf")
    left=0
    right=0
    myset=set()
    maxlen=-1
    while left<len(s):
        while right<len(s) and len(myset)<=k:
            myset.add(s[right])
            right+=1
        
        if len(myset)>k and s[left] in myset:
            myset.remove(s[left])
            if (right-left)>maxlen:
                maxlen=(right-left)
        
        left+=1
        print(myset,left,right)
        
        
    
    return maxlen-1
        



print(solution("araaci",2))
print(solution("araac1",1))
print(solution("cbbebi",3))


